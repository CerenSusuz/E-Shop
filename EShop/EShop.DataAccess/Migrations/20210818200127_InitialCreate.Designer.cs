// <auto-generated />
using System;
using EShop.DataAccess.Contexts.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EShop.DataAccess.Migrations
{
    [DbContext(typeof(EShopContext))]
    [Migration("20210818200127_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EShop.DataAccess.Entities.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<string>("CreatedUser")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(61)
                        .HasColumnType("nvarchar(61)")
                        .HasDefaultValueSql("space(0)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasDefaultValueSql("space(0)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasDefaultValueSql("space(0)");

                    b.Property<int?>("GenderId")
                        .HasColumnType("int");

                    b.Property<string>("Gsm")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasDefaultValueSql("space(0)");

                    b.Property<bool>("IsBlocked")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsSuperVisor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasDefaultValueSql("space(0)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(61)
                        .HasColumnType("nvarchar(61)")
                        .HasDefaultValueSql("space(0)");

                    b.Property<int>("UserGroupId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("GenderId");

                    b.HasIndex("Gsm");

                    b.HasIndex("UserGroupId");

                    b.HasIndex("FirstName", "LastName");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUser = "Migration",
                            Email = "ceren199704@hotmail.com",
                            FirstName = "Ceren",
                            Gsm = "5541172005",
                            IsBlocked = false,
                            IsSuperVisor = true,
                            LastName = "Susuz",
                            PasswordHash = new byte[] { 243, 83, 140, 162, 174, 101, 76, 241, 76, 246, 75, 191, 112, 92, 234, 186, 45, 178, 46, 6, 93, 24, 186, 149, 72, 252, 84, 252, 226, 30, 81, 147, 146, 81, 51, 200, 44, 88, 149, 1, 200, 183, 178, 164, 157, 100, 56, 60, 153, 188, 164, 105, 93, 35, 138, 140, 41, 138, 61, 197, 198, 114, 39, 133 },
                            PasswordSalt = new byte[] { 68, 227, 84, 99, 222, 138, 239, 184, 86, 10, 31, 172, 206, 182, 73, 251, 212, 52, 55, 214, 172, 130, 70, 119, 4, 60, 139, 34, 72, 150, 111, 208, 238, 119, 56, 116, 137, 140, 70, 65, 157, 205, 174, 228, 213, 166, 12, 80, 0, 166, 32, 165, 182, 72, 79, 93, 23, 84, 48, 40, 54, 245, 157, 82, 25, 110, 125, 220, 193, 247, 171, 53, 194, 81, 174, 113, 46, 172, 118, 42, 236, 111, 142, 133, 66, 218, 250, 149, 137, 197, 244, 72, 159, 28, 96, 90, 179, 214, 96, 76, 224, 104, 235, 64, 130, 217, 100, 245, 98, 150, 170, 41, 126, 191, 203, 209, 63, 132, 78, 110, 8, 255, 131, 74, 239, 121, 88, 216 },
                            UserGroupId = 1
                        });
                });

            modelBuilder.Entity("EShop.DataAccess.Entities.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<string>("CreatedUser")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(61)
                        .HasColumnType("nvarchar(61)")
                        .HasDefaultValueSql("space(0)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValueSql("space(0)");

                    b.Property<bool>("IsBlocked")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(61)
                        .HasColumnType("nvarchar(61)")
                        .HasDefaultValueSql("space(0)");

                    b.HasKey("Id");

                    b.HasIndex("Description");

                    b.ToTable("Genders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Kadın",
                            IsBlocked = false
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Erkek",
                            IsBlocked = false
                        });
                });

            modelBuilder.Entity("EShop.DataAccess.Entities.UserGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<string>("CreatedUser")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(61)
                        .HasColumnType("nvarchar(61)")
                        .HasDefaultValueSql("space(0)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValueSql("space(0)");

                    b.Property<bool>("IsBlocked")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<string>("UpdatedUser")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(61)
                        .HasColumnType("nvarchar(61)")
                        .HasDefaultValueSql("space(0)");

                    b.HasKey("Id");

                    b.HasIndex("Description");

                    b.ToTable("UserGroups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Personel",
                            IsBlocked = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Son kullanıcı",
                            IsBlocked = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("EShop.DataAccess.Entities.Account", b =>
                {
                    b.HasOne("EShop.DataAccess.Entities.Gender", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderId");

                    b.HasOne("EShop.DataAccess.Entities.UserGroup", "UserGroup")
                        .WithMany()
                        .HasForeignKey("UserGroupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Gender");

                    b.Navigation("UserGroup");
                });
#pragma warning restore 612, 618
        }
    }
}
